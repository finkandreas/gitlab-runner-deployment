include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext-devel.yml'
  - local: 'zinal/deploy.yml'
  - local: 'zinal/tests.yml'

stages:
  - deploy_tds
  - test_tds
  - deploy
  - test
  - revert

############# First we deploy TDS on top of the currently running image, and restart the gitlab runner ##############################
deploy_tds:
  extends: .deploy
  stage: deploy_tds
  before_script:
    - CURRENT_IMG="$(nomad job inspect podman-ci-ext-gitlab-runner-job | jq --raw-output .Job.TaskGroups[0].Tasks[0].Config.image)"
    - echo "REVERT_TAG=$CURRENT_IMG" >> revert.env
  variables:
    DOCKERFILE: Dockerfile_tds
    DOCKERTAG: $CI_REGISTRY_IMAGE/cicd-ext-zinal-gitlab-runner:tds-$CI_COMMIT_SHORT_SHA
    BUILDARGS: --build-arg BASEIMG=$CURRENT_IMG
  artifacts:
    reports:
      dotenv: zinal/revert.env

promote deploy_tds:
  extends: .deploy-promote
  stage: deploy_tds
  needs: [deploy_tds]


######################## Now we test the deployed TDS runner, jobs are submitted to the tds executables when CSCS_RUN_TDS=YES ################################
test tds container-runner:
  extends: [".test-container-runner", ".test-tds"]

test tds slurm-baremetal:
  extends: [".test-slurm-baremetal", ".test-tds"]
  variables:
    EXPECTED_CURRENT_IMG: $CI_REGISTRY_IMAGE/cicd-ext-zinal-gitlab-runner:tds-$CI_COMMIT_SHORT_SHA


############ If all tests above passed, we will build a new container image that will be the new version of t he gitlab runner (no TDS executables will be in there) ####################
deploy_prod:
  extends: .deploy
  stage: deploy
  variables:
    DOCKERFILE: Dockerfile
    DOCKERTAG: $CI_REGISTRY_IMAGE/cicd-ext-zinal-gitlab-runner:$CI_COMMIT_SHORT_SHA
    BUILDARGS: --build-arg GROUP_ID=$(id -g) --build-arg USER_ID=$(id -u)

promote deploy_prod:
  extends: .deploy-promote
  stage: deploy
  needs: [deploy_prod]


######## Run all tests again and only when they all pass this runner will be kept. In case of a failed test the runner will be reverted #########################
test container-runner:
  extends: [".test-container-runner", ".test-pprod"]

test slurm-baremetal:
  extends: [".test-slurm-baremetal", ".test-prod"]
  variables:
    EXPECTED_CURRENT_IMG: $CI_REGISTRY_IMAGE/cicd-ext-zinal-gitlab-runner:$CI_COMMIT_SHORT_SHA


#### Revert to previous runner if anything went wrong along the way ############
revert to previous:
  tags: ["zinal-slurm-baremetal"]
  stage: revert
  when: on_failure
  script:
    - cd zinal
    - TOKEN="$(cat $HOME/zinal/gitlab-runner-config-zinal.token)"
    - RUNNER_ID="$(cat $HOME/zinal/gitlab-runner-system_id)"
    - 'if [[ -z $DOCKERTAG ]] ; then env && echo "DOCKERTAG is empty, cannot revert" && exit 1 ; fi'
    - nomad job plan -var image_id=$DOCKERTAG -var "GITLAB_RUNNER_TOKEN=$TOKEN" -var "GITLAB_RUNNER_SYSTEM_ID=$RUNNER_ID" nomad_podman_gitlab-runner.hcl | tee nomad_plan.log || true
    - chmod 600 nomad_plan.log
    - eval $(grep "nomad job run " nomad_plan.log | sed -e 's/job run/job run -detach/')
    - sleep 60
    - DEPLOYMENT=$(nomad deployment list | grep podman-ci-ext-gitlab-runner-job | head -n 1 | cut -f1 -d' ')
    - 'nomad deployment promote -detach $DEPLOYMENT'
  variables:
    DOCKERTAG: $REVERT_TAG
    HOME: /users/anfink
  allow_failure: true
